{"mappings":"gkBAMA,MAAMA,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YACjCE,EAAkBH,SAASC,cAAc,kBAE/C,IAAIG,EAAQ,GACRC,EAAO,EACPC,EAAa,EA0BjBC,eAAeC,IACb,MACMC,SADe,EAAAC,EAAAC,UAASP,EAAOC,EA1BvB,KA2BSO,KACjBC,EAAYJ,EAAQI,UAG1B,GAFAP,GAAcG,EAAQK,KAAKC,OAED,IAAtBN,EAAQI,UAEV,YAgFFG,EAAAC,GAASC,OAAOC,QACd,8DAhFkB,IAATd,GAsEb,SAA4BI,GAC1BO,EAAAC,GAASC,OAAOE,QAAQ,oBAAoBX,EAAQI,oB,CAtElDQ,CAAmBZ,GA4BvB,SAAuBa,GACrB,MAAMC,EAAgBD,EACnBE,KACC,EAACC,GACCA,EAAEC,cACFA,EAAaC,aACbA,EAAYC,KACZA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,KAEO,oDACkCN,wDACCD,sCAClBE,WAAsBC,yJAGXC,4HAGAC,+HAGGC,gIAGCC,oHAQ1CC,KAAK,IAER/B,EAAQgC,mBAAmB,YAAaX,E,CA/DxCY,CAAc1B,EAAQK,MACC,IAAIE,EAAAoB,GAAJ,CAAmB,cAAcC,UAExDhC,GAAQ,EACRiC,EAAGC,QAAQC,KAEPlC,IAAeO,GACjBV,EAAgBsC,UAAUC,OAAO,Y,CA3CrC3C,EAAW4C,iBAAiB,UAE5BpC,eAA4BqC,GAU1B,GATAA,EAAEC,iBAEFxC,EAAO,EACPC,EAAa,EACbF,EAAQwC,EAAEE,cAAcC,YAAYC,MAAMC,OAC1C/C,EAAQgD,UAAY,GAEpB/C,EAAgBsC,UAAUU,IAAI,aAEhB,KAAV/C,EAEF,YA6FFY,EAAAC,GAASC,OAAOC,QAAQ,+BA3FxB,IACEX,G,CACA,MAAO4C,GACPpC,EAAAC,GAASC,OAAOC,QAAQ,+B,KA4B5B,MAAMmB,EAAK,IAAIe,sBAAqBC,IAClCA,EAAQC,SAAQC,IACTA,EAAMC,iBAGXjB,IACAhC,IAAkB,GAClB,IAGJ,SAASgC,IACP,OAAOxC,SAASC,cAAc,4B","sources":["src/scroll.js"],"sourcesContent":["import './css/styles.css';\nimport { fetchImg } from './js/fetchImg';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst endOfSearchText = document.querySelector('.gallery__text');\n\nlet query = '';\nlet page = 1;\nlet loadedHits = 0;\nconst perPage = 40;\n\nsearchForm.addEventListener('submit', onSearchForm);\n\nasync function onSearchForm(e) {\n  e.preventDefault();\n\n  page = 1;\n  loadedHits = 0;\n  query = e.currentTarget.searchQuery.value.trim();\n  gallery.innerHTML = '';\n\n  endOfSearchText.classList.add('is-hidden');\n\n  if (query === '') {\n    alertEmptySearch();\n    return;\n  }\n  try {\n    createCollection();\n  } catch (error) {\n    Notiflix.Notify.failure('Ooops...Something goes wrong');\n  }\n}\n\nasync function createCollection() {\n  const object = await fetchImg(query, page, perPage);\n  const objData = object.data;\n  const totalHits = objData.totalHits;\n  loadedHits += objData.hits.length;\n\n  if (objData.totalHits === 0) {\n    alertNoImagesFound();\n    return;\n  } else if (page === 1) {\n    alertImagesToFound(objData);\n  }\n\n  renderGallery(objData.hits);\n  const simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n\n  page += 1;\n  io.observe(getLastImgEl());\n\n  if (loadedHits === totalHits) {\n    endOfSearchText.classList.remove('is-hidden');\n  }\n}\n\nconst io = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (!entry.isIntersecting) {\n      return;\n    }\n    getLastImgEl();\n    createCollection();\n  });\n});\n\nfunction getLastImgEl() {\n  return document.querySelector('.gallery__link:last-child');\n}\n\nfunction renderGallery(images) {\n  const galleryMarkup = images\n    .map(\n      ({\n        id,\n        largeImageURL,\n        webformatURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n                <a class=\"gallery__link\" href=\"${largeImageURL}\">\n                    <div class=\"photo-card\" id=\"${id}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                    <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b> ${likes}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b> ${views}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b> ${comments}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b> ${downloads}\n                        </p>\n                    </div>\n                </div>\n                </a>\n    `;\n      }\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n}\n\nfunction alertImagesToFound(objData) {\n  Notiflix.Notify.success(`Hooray! We found ${objData.totalHits} images.`);\n}\n\nfunction alertEmptySearch() {\n  Notiflix.Notify.failure('This field cannot be empty!');\n}\n\nfunction alertNoImagesFound() {\n  Notiflix.Notify.failure(\n    'No images were found for this request, try something else.'\n  );\n}\n"],"names":["$b02d73f657452650$var$searchForm","document","querySelector","$b02d73f657452650$var$gallery","$b02d73f657452650$var$endOfSearchText","$b02d73f657452650$var$query","$b02d73f657452650$var$page","$b02d73f657452650$var$loadedHits","async","$b02d73f657452650$var$createCollection","objData","$dOcJw","fetchImg","data","totalHits","hits","length","$parcel$interopDefault","$eWCmQ","Notify","failure","success","$b02d73f657452650$var$alertImagesToFound","images","galleryMarkup","map","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","$b02d73f657452650$var$renderGallery","$fZKcF","refresh","$b02d73f657452650$var$io","observe","$b02d73f657452650$var$getLastImgEl","classList","remove","addEventListener","e","preventDefault","currentTarget","searchQuery","value","trim","innerHTML","add","error","IntersectionObserver","entries","forEach","entry","isIntersecting"],"version":3,"file":"scroll.bb779cda.js.map"}